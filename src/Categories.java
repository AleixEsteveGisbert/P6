
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author sergiosayago
 */
public class Categories extends javax.swing.JFrame {

    /**
     * Creates new form Query
     */
    Connection con;
    public static Statement stmt = null;
    public static ResultSet rs = null;

    public Categories(Connection c) {
        initComponents();
        this.setLocationRelativeTo(null);
        con = c;
        fillTableData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTableQueryResult = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CATEGORIES");

        jTableQueryResult.setAutoCreateRowSorter(true);
        jTableQueryResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableQueryResult.setSelectionBackground(new java.awt.Color(153, 153, 153));
        jTableQueryResult.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableQueryResult.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableQueryResult.setShowGrid(false);
        jTableQueryResult.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableQueryResultMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableQueryResult);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 682, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableQueryResultMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableQueryResultMouseClicked

    }//GEN-LAST:event_jTableQueryResultMouseClicked

    private ResultSet executeQuery(Connection con, String query) {

        try {

            stmt = con.createStatement();

            rs = stmt.executeQuery(query);

            return rs;

        } catch (SQLException e) {

            JOptionPane.showMessageDialog(this, e.getMessage(), "Status", JOptionPane.INFORMATION_MESSAGE);

            return null;
        }
    }

    public void fillTableData() {
        try {
            ResultSet result = executeQuery(con, "SELECT * FROM categoria");

            ResultSetMetaData resultMetaData = result.getMetaData();
            //System.out.println("List of column names in the current table: ");

            int nCols = resultMetaData.getColumnCount();
            String cols[] = new String[nCols];

            DefaultTableModel tableModel = new DefaultTableModel();

            for (int i = 1; i < nCols; i++) {
                tableModel.addColumn(resultMetaData.getColumnName(i));
            }

            while (result.next()) {

                Object[] rowData = new Object[nCols];

                for (int i = 0; i < nCols; i++) {
                    rowData[i] = rs.getObject(i + 1);
                }
                tableModel.addRow(rowData);

            }

            jTableQueryResult.setModel(tableModel);
            jTableQueryResult.setColumnSelectionAllowed(false);

        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableQueryResult;
    // End of variables declaration//GEN-END:variables
}
